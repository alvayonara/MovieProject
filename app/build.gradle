plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

def credentialPropertiesFile = rootProject.file("credential.properties")
def credentialProperties = new Properties()
credentialProperties.load(new FileInputStream(credentialPropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.alvayonara.movieproject"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "BASE_URL_TMDB", '"https://api.themoviedb.org/3/movie/"'
        buildConfigField "String", "BASE_URL_TMDB_POSTER", '"https://image.tmdb.org/t/p/w154/"'
        buildConfigField "String", "TMDB_API_KEY", credentialProperties['API_KEY']

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding = true
    }
}

dependencies {
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.legacy:legacy-support-v4:$legacySupportVersion"
    implementation 'androidx.paging:paging-runtime-ktx:2.1.2'

    // Unit Testing
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesTestVersion"

    // Instrumental Testing
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test:rules:$testRulesVersion"
    androidTestImplementation "androidx.test.ext:junit:$testJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"

    // Circle Image
    implementation "de.hdodenhof:circleimageview:$circleImageVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$loggingInterceptorVersion"

    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"

    // To use by viewModels
    implementation "androidx.activity:activity-ktx:$activityKtxVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"

    // Coroutines Flow
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // Shimmer
    implementation "com.facebook.shimmer:shimmer:$shimmerVersion"

    // Material Ripple
    implementation "com.balysv:material-ripple:$materialRippleVersion"
}